{
  "$id" : "https://raw.githubusercontent.com/Sage-Bionetworks/AssessmentModel-JsonSchema/main/schemas/AsyncActionConfiguration.json",
  "$schema" : "http://json-schema.org/draft-07/schema#",
  "definitions" : {
    "AsyncActionType" : {
      "$id" : "#AsyncActionType",
      "description" : "",
      "examples" : [
        "distance",
        "microphone",
        "motion",
        "weather"
      ],
      "title" : "AsyncActionType",
      "type" : "string"
    },
    "AudioRecorderConfigurationObject" : {
      "$id" : "#AudioRecorderConfigurationObject",
      "additionalProperties" : false,
      "allOf" : [
        {
          "$ref" : "AsyncActionConfiguration.json"
        }
      ],
      "description" : "",
      "examples" : [
        {
          "identifier" : "microphone",
          "requiresBackgroundAudio" : true,
          "saveAudioFile" : true,
          "startStepIdentifier" : "countdown",
          "stopStepIdentifier" : "rest",
          "type" : "microphone"
        }
      ],
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "requiresBackgroundAudio" : {
          "type" : "boolean"
        },
        "saveAudioFile" : {
          "type" : "boolean"
        },
        "startStepIdentifier" : {
          "type" : "string"
        },
        "stopStepIdentifier" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#AsyncActionType",
          "const" : "microphone"
        }
      },
      "required" : [
        "identifier",
        "type"
      ],
      "title" : "AudioRecorderConfigurationObject",
      "type" : "object"
    },
    "DistanceRecorderConfigurationObject" : {
      "$id" : "#DistanceRecorderConfigurationObject",
      "additionalProperties" : false,
      "allOf" : [
        {
          "$ref" : "AsyncActionConfiguration.json"
        }
      ],
      "description" : "",
      "examples" : [
        {
          "identifier" : "distance",
          "motionStepIdentifier" : "run",
          "startStepIdentifier" : "countdown",
          "stopStepIdentifier" : "rest",
          "type" : "distance"
        }
      ],
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "motionStepIdentifier" : {
          "type" : "string"
        },
        "startStepIdentifier" : {
          "type" : "string"
        },
        "stopStepIdentifier" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#AsyncActionType",
          "const" : "distance"
        },
        "usesCSVEncoding" : {
          "type" : "boolean"
        }
      },
      "required" : [
        "identifier",
        "type"
      ],
      "title" : "DistanceRecorderConfigurationObject",
      "type" : "object"
    },
    "MotionRecorderConfigurationObject" : {
      "$id" : "#MotionRecorderConfigurationObject",
      "additionalProperties" : false,
      "allOf" : [
        {
          "$ref" : "AsyncActionConfiguration.json"
        }
      ],
      "description" : "",
      "examples" : [
        {
          "identifier" : "exampleA",
          "requiresBackgroundAudio" : false,
          "type" : "motion"
        },
        {
          "frequency" : 200,
          "identifier" : "exampleB",
          "recorderTypes" : [
            "gyro",
            "gravity"
          ],
          "requiresBackgroundAudio" : true,
          "shouldDeletePrevious" : false,
          "type" : "motion",
          "usesCSVEncoding" : true
        }
      ],
      "properties" : {
        "frequency" : {
          "default" : 100,
          "description" : "The sampling frequency of the motion sensors.",
          "type" : "number"
        },
        "identifier" : {
          "description" : "A short string that uniquely identifies the asynchronous action within the task.",
          "type" : "string"
        },
        "recorderTypes" : {
          "description" : "The motion sensor types to include with this configuration.",
          "items" : {
            "$ref" : "#MotionRecorderType"
          },
          "type" : "array"
        },
        "requiresBackgroundAudio" : {
          "default" : false,
          "description" : "Whether or not the recorder requires background audio.",
          "type" : "boolean"
        },
        "shouldDeletePrevious" : {
          "default" : true,
          "description" : "Should the file used in a previous run of a recording be deleted?",
          "type" : "boolean"
        },
        "startStepIdentifier" : {
          "type" : "string"
        },
        "stopStepIdentifier" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#AsyncActionType",
          "const" : "motion"
        },
        "usesCSVEncoding" : {
          "default" : false,
          "description" : "Should samples be encoded as a CSV file.",
          "type" : "boolean"
        }
      },
      "required" : [
        "identifier",
        "type"
      ],
      "title" : "MotionRecorderConfigurationObject",
      "type" : "object"
    },
    "MotionRecorderType" : {
      "$id" : "#MotionRecorderType",
      "description" : "",
      "enum" : [
        "accelerometer",
        "gyro",
        "magnetometer",
        "attitude",
        "gravity",
        "magneticField",
        "rotationRate",
        "userAcceleration"
      ],
      "title" : "MotionRecorderType",
      "type" : "string"
    },
    "WeatherConfigurationObject" : {
      "$id" : "#WeatherConfigurationObject",
      "additionalProperties" : false,
      "allOf" : [
        {
          "$ref" : "AsyncActionConfiguration.json"
        }
      ],
      "description" : "",
      "examples" : [
        {
          "identifier" : "weather",
          "services" : [
            {
              "identifier" : "weather",
              "key" : "ABCD",
              "provider" : "openWeather"
            },
            {
              "identifier" : "airQuality",
              "key" : "ABCD",
              "provider" : "airNow"
            }
          ],
          "startStepIdentifier" : "countdown",
          "type" : "weather"
        }
      ],
      "properties" : {
        "identifier" : {
          "description" : "Identifier for the weather services.",
          "type" : "string"
        },
        "services" : {
          "description" : "The configuration for each of the weather services used by this recorder.",
          "items" : {
            "$ref" : "#WeatherServiceConfigurationObject"
          },
          "type" : "array"
        },
        "startStepIdentifier" : {
          "description" : "Identifier for the step (if any) that should be used for starting services.",
          "type" : "string"
        },
        "type" : {
          "$ref" : "#AsyncActionType",
          "const" : "weather"
        }
      },
      "required" : [
        "type",
        "identifier",
        "startStepIdentifier",
        "services"
      ],
      "title" : "WeatherConfigurationObject",
      "type" : "object"
    },
    "WeatherServiceConfigurationObject" : {
      "$id" : "#WeatherServiceConfigurationObject",
      "additionalProperties" : false,
      "allOf" : [

      ],
      "description" : "",
      "examples" : [
        {
          "identifier" : "weather",
          "key" : "ABCD",
          "provider" : "openWeather"
        },
        {
          "identifier" : "airQuality",
          "key" : "ABCD",
          "provider" : "airNow"
        }
      ],
      "properties" : {
        "identifier" : {
          "description" : "Identifier for the service (weather or air quality)",
          "type" : "string"
        },
        "key" : {
          "description" : "The API key to use when accessing the service.",
          "type" : "string"
        },
        "provider" : {
          "description" : "Name of service provider. For example, openWeather",
          "type" : "string"
        }
      },
      "required" : [
        "identifier",
        "key",
        "provider"
      ],
      "title" : "WeatherServiceConfigurationObject",
      "type" : "object"
    }
  },
  "description" : "`AsyncActionConfiguration` defines general configuration for an asynchronous background action that should be run in the background. Depending upon the parameters and how the action is set up, this could be something that is run continuously or else is paused or reset based on a timeout interval.",
  "properties" : {
    "identifier" : {
      "type" : "string"
    },
    "type" : {
      "$ref" : "#AsyncActionType"
    }
  },
  "required" : [
    "type",
    "identifier"
  ],
  "title" : "AsyncActionConfiguration",
  "type" : "object"
}